version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "332672892491"
    IMAGE_NAME: "alti"
    IMAGE_NAMESPACE: "eduapps"
    IMAGE_TAG_PROD: "prod"
    IMAGE_TAG_TEST: "test"

phases:
  pre_build:
    commands:
      - GIT_COMMIT_HASH=$(git rev-parse --short=7 --verify HEAD)
      - PACKAGE_VERSION=$(awk -F\" '/"version":/ {print $4}' package.json)
      - APP_VERSION=$PACKAGE_VERSION-$GIT_COMMIT_HASH
      - REPO_URL=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAMESPACE/$IMAGE_NAME

      - echo Logging in to ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)

      - docker version
      - docker pull $REPO_URL:$IMAGE_TAG_TEST || true
  build:
    commands:
      - echo Build started on `date`
      - echo Building Docker image...
      - docker build --build-arg app_version=$APP_VERSION --cache-from=$IMAGE_NAMESPACE/$IMAGE_NAME:$IMAGE_TAG_TEST -t $IMAGE_NAME:$GIT_COMMIT_HASH -t $IMAGE_NAME:$IMAGE_TAG_TEST .
      - docker tag $IMAGE_NAME:$IMAGE_TAG_TEST $REPO_URL:$IMAGE_TAG_TEST
      - docker tag $IMAGE_NAME:$IMAGE_TAG_TEST $REPO_URL:$GIT_COMMIT_HASH
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker image and tags...
      - docker push $REPO_URL:$IMAGE_TAG_TEST
      - docker push $REPO_URL:$GIT_COMMIT_HASH

      # Update the service.
      # Discard the default output (json full description of the service.)
      - aws ecs update-service --cluster eduapp-test --service alti-test --force-new-deployment 1>/dev/null

      - echo Done
